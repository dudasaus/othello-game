@import "sizes";

body {
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: #6D4C41 linear-gradient(to bottom left, #6D4C41, #3E2723);
}

$gameHeight: 480px;
$gameWidth: 480px;
$phoneWidth: 320px;
$phoneHeight: 320px;
$boardColor: green;

.piece-extend {
  content: '';
  position: absolute;
  left: 5%;
  top: 5%;
  right: 5%;
  bottom: 5%;
  border-radius: 50%;
  display: block;
  backface-visibility: hidden;
  transform: rotateY(90deg);
  transition: all 0.5s;
}

.game {
  width: $gameWidth * 1.1;
  height: $gameHeight * 1.4;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background: lighten(black, 10%);
  border-radius: $gameWidth / 10;
  margin: auto;
  @include use-at(phone) {
    width: $phoneWidth * 1.1;
    height: $phoneHeight * 1.4;
    border-radius: $phoneWidth / 10;
  };
  .piece-holder {
    height: $gameHeight / 12;
    width: $gameWidth;
    background: #333;
    box-shadow: inset 0 0 10px #000;
    margin: 16px 0px;
    @include use-at(phone) {
      height: $phoneHeight / 12;
      width: $phoneWidth;
      margin: 12px 0px;
    };
    .piece {
      display: inline-block;
      width: $gameWidth / 30;
      position: relative;
      height: 100%;
      @include use-at(phone) {
        width: $phoneWidth / 30;
      }
      &::before, &::after {
        content: '';
        display: inline-block;
        width: 50%;
        position: absolute;
        top: 0;
        height: 100%;
      }
      &::before {
        left: 0;
        background: #333;
        box-shadow: inset 0 0 7px #000;
      }
      &::after {
        right: 0;
        background: #fff;
        box-shadow: inset 0 0 7px #000;
      }
    }
  }
  table {
    width: $gameWidth;
    height: $gameHeight;
    background: darken($boardColor, 5%);
    @include use-at(phone) {
      width: $phoneWidth;
      height: $phoneHeight;
    }
    td {
      width: $gameWidth / 12;
      height: $gameHeight / 12;
      position: relative;
      // background: $boardColor;
      padding: 0;
      transition: background-color 0.2s;
      box-shadow: inset 0 0 15px darken($boardColor, 20%);
      @include use-at(phone) {
        width: $phoneWidth / 12;
        height: $phoneHeight / 12;
      }
      &:hover {
        background: lighten($boardColor, 15%);
      }
      span.eval {
        position: absolute;
        bottom: 2px;
        left: 2px;
        font-size: 10px;
        background: #fff;
        color: #000;
        padding: 2px;
      }
      span.tile {
        width: 100%;
        height: 100%;
        display: block;
        // position: relative;
        &::before {
          @extend .piece-extend;
          background: #222;
          box-shadow: inset 0 0 10px #000;
        }
        &::after {
          @extend .piece-extend;
          background: #fff;
          box-shadow: inset 0 0 10px #000;
        }
        &.black {
          &::before {
            transform: rotateY(0deg);
          }
          &::after {
            transform: rotateY(180deg);
          }
        }
        &.white {
          &::before {
            transform: rotateY(180deg);
          }
          &::after {
            transform: rotateY(0deg);
          }
        }
      }
    }
  }
}
